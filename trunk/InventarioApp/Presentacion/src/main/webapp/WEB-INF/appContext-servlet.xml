<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-4.0.xsd"
       default-autowire="byName">

    <context:component-scan base-package="com.app.inventario.controlador" />
    <!-- Busca la anotación @Autowired en todas las clases de la aplicación e inyecta el bean correspondiente si la encuentra -->
    <context:annotation-config />
    <!-- Configures the @Controller programming model -->
    <mvc:annotation-driven />
    
    <!-- <mvc:view-controller path="/login" view-name="login"/> -->
    
    <!--Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources/ directory -->
    <mvc:resources mapping="/resources/**" location="/resources/" />
    <mvc:resources mapping="/css/**" location="/css/" cache-period="300"/>
    <mvc:resources mapping="/img/**" location="/img/" cache-period="300"/>
    <mvc:resources mapping="/images/**" location="/img/" cache-period="300"/>
    <mvc:resources mapping="/js/**" location="/js/" cache-period="300"/>
    <mvc:resources mapping="/extjs/**" location="/extjs/" />
    <mvc:resources mapping="*.html" location="/" />
   
    <!--Resolves view names to protected .jsp resources within the /WEB-INF/views directory -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    
    <!-- Bean que se encarga de convertir los mensajes del Controlador en formato JSON hacia el lado del cliente -->
    <bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
    </bean>
    <!-- Utilizando la configuracion dentro del Servidor de aplicaciones web -->
    
    <!--<jee:jndi-lookup jndi-name="java:comp/env/jdbc/inventarioDB" id="dataSource" />-->
    
    <!-- Creando el datasource como un bean propio de Spring Framework    -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/inventario" />
        <property name="username" value="root" />
        <property name="password" value="root" />
    </bean>
    
    <!-- Session factory, es un bean de configuracion de hibernate
         es necesario para el funcionamiento de los mapeos y las consultas
         y transacciones en la base de datos
    -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <!--
        Lista de clases con Mapeos en la base de datos utilizando Annotations (@)
        -->
        
        <property name="annotatedClasses">
            <list>
                <value>com.app.inventario.entidades.seguridad.Usuario</value>
                <value>com.app.inventario.entidades.Proveedor</value>
                <value>com.app.inventario.entidades.Familia</value>
                <value>com.app.inventario.entidades.Producto</value>
                <value>com.app.inventario.entidades.Factura</value>
                <value>com.app.inventario.entidades.LineaFactura</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop> 
                <prop key="hibernate.connection.autocommit">false</prop>
            </props>
        </property>
    </bean>
        
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    
    <bean id="customAuthenticationProvider" class="com.app.inventario.logica.seguridad.CustomAuthenticationProvider">
        
    </bean>
    
    <bean id="usuarioServicioAuth" class="com.app.inventario.dao.seguridad.UsuarioServicio">
    </bean>
    
    <!-- Beans utilizados para todo el flujo con las entidades Usuario -->
    <bean id="usuarioDAO" class="com.app.inventario.dao.UsuarioDAOImpl">
    </bean>
    
    <bean id="usuarioLogica" class="com.app.inventario.logica.UsuarioLogicaImpl">  
        <property name="messageDigestPasswordEncoder" ref="passwordEncoder"/>
        <property name="saltSource" ref="saltSource"/>
    </bean>
    
    <bean id="usuarioServicio" class="com.app.inventario.servicio.UsuarioServicioImpl">  
    </bean>
    
    <!-- Beans utilizados para todo el flujo con las entidades Proveedor -->
    <bean id="proveedorDAO" class="com.app.inventario.dao.ProveedorDAOImpl">
    </bean>
    
    <bean id="proveedorLogica" class="com.app.inventario.logica.ProveedorLogicaImpl">  
    </bean>
    
    <bean id="proveedorServicio" class="com.app.inventario.servicio.ProveedorServicioImpl">  
    </bean>
    
    <!-- Beans utilizados para todo el flujo con las entidades Proveedor -->
    <bean id="familiaDAO" class="com.app.inventario.dao.FamiliaDAOImpl">
    </bean>
    
    <bean id="familiaLogica" class="com.app.inventario.logica.FamiliaLogicaImpl">  
    </bean>
    
    <bean id="familiaServicio" class="com.app.inventario.servicio.FamiliaServicioImpl">  
    </bean>
    
    <!-- Controladores que utilizan la capa de servicio o fachadas -->
    <bean id="controlador" class="com.app.inventario.controlador.Controlador">
    </bean>
    
    
    <!-- Aquí termina la capa de controladores -->
</beans>